// <auto-generated />
using System;
using DM.Infrastructure.Data.CommandsDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DM.Infrastructure.Data.CommandDb.Migrations
{
    [DbContext(typeof(DoeMaisDbContextMySql))]
    [Migration("20231231231029_Versao.001.00")]
    partial class Versao00100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DM.Domain.Entities.Doacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataDoacao")
                        .HasColumnType("date");

                    b.Property<Guid>("DoadorId")
                        .HasColumnType("char(36)");

                    b.Property<double>("QuantidadeML")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("DoadorId");

                    b.ToTable("Doacoes");
                });

            modelBuilder.Entity("DM.Domain.Entities.Doador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("FatorRh")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<int>("TipoSanguineo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Doadores");
                });

            modelBuilder.Entity("DM.Domain.Entities.EstoqueSangue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FatorRh")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeML")
                        .HasColumnType("double");

                    b.Property<int>("TipoSanguineo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstoqueSangues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bde3e59c-20ba-46bd-90e5-65210160dfce"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 1,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 3
                        },
                        new
                        {
                            Id = new Guid("35a05f1f-46a6-4195-8e94-0fc6f24c986f"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 2,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 3
                        },
                        new
                        {
                            Id = new Guid("940f2ad2-de7c-476c-9268-765391dfd129"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 1,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 1
                        },
                        new
                        {
                            Id = new Guid("57a93711-7147-44b9-bc10-84d5c7a832e6"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 2,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 1
                        },
                        new
                        {
                            Id = new Guid("c6591fb6-938b-4d89-aec0-c64fcba0701b"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 1,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 2
                        },
                        new
                        {
                            Id = new Guid("802ad115-74ec-4092-b164-ce3ae9d44571"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 2,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 2
                        },
                        new
                        {
                            Id = new Guid("96efb611-0af2-413f-918c-808576784576"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 1,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 4
                        },
                        new
                        {
                            Id = new Guid("8395a06f-2280-4315-8eb5-8209da8fcffa"),
                            DataAtualizado = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatorRh = 2,
                            QuantidadeML = 0.0,
                            TipoSanguineo = 4
                        });
                });

            modelBuilder.Entity("DM.Infrastructure.Data.Outbox.OutBoxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("Error")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OccurrendOnUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeFullName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OutBoxMessages");
                });

            modelBuilder.Entity("DM.Domain.Entities.Doacao", b =>
                {
                    b.HasOne("DM.Domain.Entities.Doador", "Doador")
                        .WithMany("Doacoes")
                        .HasForeignKey("DoadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doador");
                });

            modelBuilder.Entity("DM.Domain.Entities.Doador", b =>
                {
                    b.OwnsOne("DM.Core.DomainObjects.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("DoadorId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Cep")
                                .HasMaxLength(8)
                                .HasColumnType("varchar(8)")
                                .HasColumnName("Cep");

                            b1.Property<string>("Cidade")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Estado")
                                .HasMaxLength(2)
                                .HasColumnType("varchar(2)")
                                .HasColumnName("Estado");

                            b1.Property<string>("Logradouro")
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Logradouro");

                            b1.HasKey("DoadorId");

                            b1.ToTable("Doadores");

                            b1.WithOwner()
                                .HasForeignKey("DoadorId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DM.Domain.Entities.Doador", b =>
                {
                    b.Navigation("Doacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
